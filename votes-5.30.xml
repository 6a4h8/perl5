<?xml version="1.0"?><?xml-stylesheet type="text/xml" href="#stylesheet"?><!DOCTYPE doc SYSTEM "doc.dtd"><doc>

<data>

<div><h2>Tickets Listed as 5.30.2 blockers</h2>

</div>

<div><h2>Other Proposed Cherry-Picks</h2>

Proposed cherry-picks are grouped according to the types of change permitted by perlpolicy.pod.

(NOTE: The same document states that the following types of change are not acceptable:

Anything controversial
Breaking binary compatibility
Adding or removing features
Adding new warnings, errors or deprecations

The same criteria apply to code in dual-life modules as to core code.)

<commit votes="demerphq" id="f2f32cd638746f538da6db804dab6dd54e654f30" ticket="15109" desc="avoid identical stack traces" />

</div>

<div><h3>Security Fixes</h3>

<commit votes="steveh" id="1bff26779d92ed756b7d4e5be908124dd5a0a450" ticket="17529" desc="Update Compress-Raw-Bzip2 to CPAN version 2.089"/>
<commit votes="demerphq" id="ac3afc4b35675aec55918770197358190f782728" ticket="" desc="regcomp.c: make \K+ and \K* illegal." />
</div>

<div><h3>Crash / Assertion / Memory Corruption Fixes</h3>

steveh: This adds a new member to struct RExC_state_t. Is that a problem for binary compatibility?
khw vote contingent on bin compat being acceptable
<commit votes="steveh arc khw" id="cc16d262eb72677cdda2aa9395e943818b85ba38" ticket="16977" desc="PATCH: [perl #134059] panic outputting a warning"/>

This is https://github.com/Perl/perl5-security/issues/115
<commit votes="steveh khw xsawyerx demerphq" id="2df0dd21423ddf295fe2e5d2a6665300f4c5dd94" ticket="" desc="PATCH: [perl 134335], gh115,Assert fail in regmatch"/>

<commit votes="steveh demerphq" id="712e071bf4b91b0e2970bf38637b1a1b96dcc099" ticket="17221" desc="fix panic caused by printf with %n with utf8 length magic"/>
<commit votes="steveh demerphq" id="08e55ec5e3ef6d6c040c0dc8bdec7d59f76bfbe8" ticket="16529" desc="win32: fix waitpid(-1, WNOHANG) segfault/panic"/>
<commit votes="steveh hv" id="0463f3a19af7afac8b402655ad66e5b05c095bcc" ticket="17218" desc="PATCH: gh#17218 memory leak"/>
<commit votes="steveh hv" id="81d11450691ee281f37c6c4e8055735b972733bd" ticket="17367" desc="PATCH: GH #17367 read 1 beyond end of buffer"/>

steveh: Both of these, or neither:
<commit votes="steveh hv" id="9f16475a53933d1d9c547f871b97b3b12160cece" ticket="17370" desc="PATCH: GH #17370, read beyond buffer in grok_inf_nan"/>
<commit votes="steveh hv" id="dca9f615c2ca4c784ef9cdd9a7a313de40998bcf" ticket="17370" desc="Actually fix GH #17370"/>

<commit votes="steveh hv demerphq" id="ca902fb80835be4a725df117917a4b62cc7022fe" ticket="17372" desc="Fix Issue #17372 - Deal with NOTHING regops in trie code properly"/>

<commit votes="hv demerphq" id="af6880c950bceae5aa17dc228f139d0b4e797594" ticket="17490" desc="regexec: don't increment recursion counter for non-postponed EVAL"/>

<commit votes="steveh demerphq" id="3b2e5620ed4a6b341f97ffd1d4b6466cc2c4bc5b" ticket="17117" desc="PATCH: [perl #134329] Use after free in regcomp.c"/>

</div>

<div><h3>Regression Fixes</h3>

</div>

<div><h3>New Feature Fixes</h3>

</div>

<div><h3>Build and Installation Fixes</h3>

<commit votes="steveh" id="ff69e883532791953a441f1a5316276bb142797c" ticket="" desc="Fix MYMALLOC (PERL_MALLOC) build on Windows"/>

</div>

<div><h3>Portability Fixes</h3>

</div>

<div><h3>Platform-Specific Test Fixes</h3>

</div>

<div><h3>Documentation Fixes</h3>

</div>

</data>

<xsl:stylesheet version="1.0" id="stylesheet" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"><xsl:template match="xsl:stylesheet"/>
  <xsl:template match="/">
    <html>
      <head>
        <title>Cherry-pick votes for maint-5.30</title>
        <style>
          .accepted .ref a { color: #090 }
          .unvoted  .ref a { color: #c00 }
        </style>
      </head>
      <body>
        <h1>Cherry-pick votes for maint-5.30</h1>
        <xsl:for-each select="/doc/data/div">
          <h2><xsl:value-of select="h2"/></h2>
          <h3><xsl:value-of select="h3"/></h3>
          <table>
            <xsl:for-each select="commit|head">
              <xsl:choose>
                <xsl:when test="local-name() = 'commit'">
                  <tr>
                    <xsl:apply-templates select="@votes"/>
                    <td style="vertical-align: top; white-space: nowrap">
                      <xsl:value-of select="@votes"/>
                    </td>
                    <td class="ref" style="vertical-align: top">
                      <a href="http://perl5.git.perl.org/perl5.git/commitdiff/{@id}">
                        <xsl:value-of select="@id"/>
                      </a>
                    </td>
                    <td style="vertical-align: top">
                      <a href="https://github.com/Perl/perl5/issues/{@ticket}">
                        <xsl:value-of select="@ticket"/>
                      </a>
                    </td>
                    <td style="vertical-align: top">
                      <xsl:value-of select="@desc"/>
                    </td>
                  </tr>
                </xsl:when>
                <xsl:when test="local-name() = 'head'">
                  <tr>
                    <xsl:apply-templates select="@votes"/>
                    <td style="vertical-align: top; white-space: nowrap">
                      <xsl:value-of select="@votes"/>
                    </td>
                    <td class="ref" style="vertical-align: top">
                      <a href="http://perl5.git.perl.org/perl5.git/shortlog/refs/heads/{@branch}">
                        <xsl:value-of select="@branch"/>
                      </a>
                    </td>
                    <td style="vertical-align: top">
                      <a href="https://github.com/Perl/perl5/issues/{@ticket}">
                        <xsl:value-of select="@ticket"/>
                      </a>
                    </td>
                    <td style="vertical-align: top">
                      <xsl:value-of select="@desc"/>
                    </td>
                  </tr>
                </xsl:when>
              </xsl:choose>
            </xsl:for-each>
          </table>
        </xsl:for-each>
      </body>
    </html>
  </xsl:template>
  <xsl:template match="@votes">
    <xsl:choose>
      <xsl:when test=". = ''">
        <xsl:attribute name="class">unvoted</xsl:attribute>
      </xsl:when>
      <xsl:when test="substring-after(substring-after(normalize-space(translate(., ',', ' ')), ' '), ' ') != ''">
        <xsl:attribute name="class">accepted</xsl:attribute>
      </xsl:when>
    </xsl:choose>
  </xsl:template>
</xsl:stylesheet>

</doc>
