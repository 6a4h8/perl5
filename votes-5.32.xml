<?xml version="1.0"?><?xml-stylesheet type="text/xml" href="#stylesheet"?><!DOCTYPE doc SYSTEM "doc.dtd"><doc>

<data>

<div><h2>Tickets Listed in 5.32.1 milestone</h2>

See https://github.com/Perl/perl5/milestone/12

<commit votes="steveh khw" id="81295a42ad856da581d910c540f5bb7a18b8f7e2" issue="16529" pull="17657" desc="win32.c: rework the waitpid(-1, WNOHANG) fix" />

<commit votes="steveh khw" id="0cc28fe31b0d416e9c67ecd18b8f38c5833a455a" issue="18341" pull="" desc="Avoid deadlock with PERL_MEM_LOG" />

</div>

<div><h2>Other Proposed Cherry-Picks</h2>

Proposed cherry-picks are grouped according to the types of change permitted by perlpolicy.pod.

(NOTE: The same document states that the following types of change are not acceptable:

Anything controversial
Breaking binary compatibility
Adding or removing features
Adding new warnings, errors or deprecations

The same criteria apply to code in dual-life modules as to core code.)

See https://github.com/perl/Perl5/issues?q=+label%3Abackport-5.32

</div>

<div><h3>Security Fixes</h3>

</div>

<div><h3>Crash / Assertion / Memory Corruption Fixes</h3>

<commit votes="steveh hv" id="08be3ef7f1190d94279ad0b3e13519ac8dc3b0ec" issue="18380" pull="18390" desc="skip trying to constant fold an incomplete op tree" />

</div>

<div><h3>Regression Fixes</h3>

<commit votes="steveh leont hv" id="5b354d2a8a6fea46c62048464c6722560cb1c907" issue="17816" pull="" desc="list assign in list context was over-optimising" />

<commit votes="steveh leont hv" id="282d9dfeb4cea3c2d0335ba78faa3a9db931f1ec" issue="16685" pull="" desc="list assign in list context: honour LHS undef" />

<commit votes="steveh leont hv" id="042abef72d40ab7ff39127e2afae6e34dfc66404" issue="18063" pull="" desc="die_unwind(): global destruction" />

<commit votes="steveh hv khw" id="dd4888cbd881ebd071701fbfef45812a8773a404" issue="18123" pull="18133" desc="run_multiple_progs: allow fatal to be turned off too" />
<commit votes="steveh hv khw" id="a2f2a4e3143a7f85d874450cced74b7399fd6977" issue="18123" pull="18133" desc="run_multiple_progs: allow the EXPECT to contain only OPTIONS" />
<commit votes="steveh hv khw" id="80f44cf4982e395989f886220e05dd2071bb205a" issue="18123" pull="18133" desc="don't croak when the \K follows the lookaround assertion" />
<commit votes="steveh hv khw" id="3c43dd64639f7fbccb6ff32f0e82d007d2cde710" issue="18123" pull="18133" desc="some extra tests as suggested by hvds" />
<commit votes="steveh hv khw" id="55afc78396d86da97ab07c25295b00c9a300f081" issue="18123" pull="18133" desc="\K in lookaround might become permitted in the future" />
The last one changes an error message.

</div>

<div><h3>New Feature Fixes</h3>

</div>

<div><h3>Build and Installation Fixes</h3>

I think this depends on 7953f73fd803e53f20bdf0801f194691543b0f87 which might not belong in maint
<commit votes="steveh leont" id="31667aca63c681e1f19afe2f493cc98e62188acc" issue="" pull="" desc="Fix cygwin build" />

</div>

<div><h3>Portability Fixes</h3>

<commit votes="leont steveh hv" id="d296ead16762852ec34d173616a271c856711f77" issue="18406" pull="18407" desc="Make DynaLoader on MacOS check library existence with dlopen" />

<commit votes="leont steveh" id="0287c5eaf3a95e7fe34ada76c475514047a1ea05" issue="" pull="" desc="Make MakeMaker use dlopen to check for library availability on MacOS" />
this is a minimal subset of changes in f2e5aa2da3e37a8c827b3cf964d88d27a39ebf3e to make MakeMaker work under Big Sur.

</div>

<div><h3>Platform-Specific Test Fixes</h3>

<commit votes="leont steveh hv" id="1cd5f0d5fa70621757c327e1f6ff04bcb220e0a1" issue="" pull="18408" desc="Correctly set LC_CTYPE back in POSIX/t/time.t" />

</div>

<div><h3>Documentation Fixes</h3>

<commit votes="steveh hv" id="c150e7c040454515c5acfb8416f2acdb2c0a2bb4" issue="" pull="18097" desc="Make security warnings in the Safe and Opcode modules more direct." />

</div>

</data>

<xsl:stylesheet version="1.0" id="stylesheet" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"><xsl:template match="xsl:stylesheet"/>
  <xsl:template match="/">
    <html>
      <head>
        <title>Cherry-pick votes for maint-5.32</title>
        <style>
          .accepted .ref a { color: #090 }
          .unvoted  .ref a { color: #c00 }
        </style>
      </head>
      <body>
        <h1>Cherry-pick votes for maint-5.32</h1>
        <xsl:for-each select="/doc/data/div">
          <h2><xsl:value-of select="h2"/></h2>
          <h3><xsl:value-of select="h3"/></h3>
          <table>
            <xsl:for-each select="commit|head">
              <xsl:choose>
                <xsl:when test="local-name() = 'commit'">
                  <tr>
                    <xsl:apply-templates select="@votes"/>
                    <td style="vertical-align: top; white-space: nowrap">
                      <xsl:value-of select="@votes"/>
                    </td>
                    <td class="ref" style="vertical-align: top">
                      <a href="http://perl5.git.perl.org/perl5.git/commitdiff/{@id}">
                        <xsl:value-of select="@id"/>
                      </a>
                    </td>
                    <xsl:choose>
                      <xsl:when test="string-length(@issue) &gt; 0">
                        <td style="vertical-align: top">
                          <a href="https://github.com/Perl/perl5/issues/{@issue}">
                            GH#<xsl:value-of select="@issue"/>
                          </a>
                        </td>
                      </xsl:when>
                      <xsl:otherwise>
                        <td style="vertical-align: top"/>
                      </xsl:otherwise>
                    </xsl:choose>
                    <xsl:choose>
                      <xsl:when test="string-length(@pull) &gt; 0">
                        <td style="vertical-align: top">
                          <a href="https://github.com/Perl/perl5/pull/{@pull}">
                            PR#<xsl:value-of select="@pull"/>
                          </a>
                        </td>
                      </xsl:when>
                      <xsl:otherwise>
                        <td style="vertical-align: top"/>
                      </xsl:otherwise>
                    </xsl:choose>
                    <td style="vertical-align: top">
                      <xsl:value-of select="@desc"/>
                    </td>
                  </tr>
                </xsl:when>
                <xsl:when test="local-name() = 'head'">
                  <tr>
                    <xsl:apply-templates select="@votes"/>
                    <td style="vertical-align: top; white-space: nowrap">
                      <xsl:value-of select="@votes"/>
                    </td>
                    <td class="ref" style="vertical-align: top">
                      <a href="http://perl5.git.perl.org/perl5.git/shortlog/refs/heads/{@branch}">
                        <xsl:value-of select="@branch"/>
                      </a>
                    </td>
                    <xsl:choose>
                      <xsl:when test="string-length(@issue) &gt; 0">
                        <td style="vertical-align: top">
                          <a href="https://github.com/Perl/perl5/issues/{@issue}">
                            GH#<xsl:value-of select="@issue"/>
                          </a>
                        </td>
                      </xsl:when>
                      <xsl:otherwise>
                        <td style="vertical-align: top"/>
                      </xsl:otherwise>
                    </xsl:choose>
                    <xsl:choose>
                      <xsl:when test="string-length(@pull) &gt; 0">
                        <td style="vertical-align: top">
                          <a href="https://github.com/Perl/perl5/pull/{@pull}">
                            PR#<xsl:value-of select="@pull"/>
                          </a>
                        </td>
                      </xsl:when>
                      <xsl:otherwise>
                        <td style="vertical-align: top"/>
                      </xsl:otherwise>
                    </xsl:choose>
                    <td style="vertical-align: top">
                      <xsl:value-of select="@desc"/>
                    </td>
                  </tr>
                </xsl:when>
              </xsl:choose>
            </xsl:for-each>
          </table>
        </xsl:for-each>
      </body>
    </html>
  </xsl:template>
  <xsl:template match="@votes">
    <xsl:choose>
      <xsl:when test=". = ''">
        <xsl:attribute name="class">unvoted</xsl:attribute>
      </xsl:when>
      <xsl:when test="substring-after(substring-after(normalize-space(translate(., ',', ' ')), ' '), ' ') != ''">
        <xsl:attribute name="class">accepted</xsl:attribute>
      </xsl:when>
    </xsl:choose>
  </xsl:template>
</xsl:stylesheet>

</doc>
