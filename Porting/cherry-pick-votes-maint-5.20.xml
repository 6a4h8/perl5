<?xml version="1.0"?><?xml-stylesheet type="text/xml" href="#stylesheet"?><!DOCTYPE doc SYSTEM "doc.dtd"><doc>

<data>

<div><h2>Tickets Listed in #123921: 5.20.3 blockers</h2>

</div>

<div><h2>Other Proposed Cherry-Picks</h2>

Blead changes have been examined up to and including 64821df16a716bfc005acb06c7dc5b72afabe38d ([perl #123961] handle a missing closing ` for -DT output)

Proposed cherry-picks are grouped according to the types of change permitted by perlpolicy.pod.

(NOTE: The same document states that the following types of change are not acceptable:

Anything controversial
Breaking binary compatibility
Adding or removing features
Adding new warnings, errors or deprecations

The same criteria apply to code in dual-life modules as to core code.)

</div>

<div><h3>Security Fixes</h3>

</div>

<div><h3>Crash / Assertion / Memory Corruption Fixes</h3>

<commit votes="steveh, arc" id="83a85f49e265a458a481a9dc402dd3bdd30ae457" ticket="123711" desc="[perl #123711] Fix crash with 0-5x-l{0}"/>

If a reasonable way is found to make the new test in d27f4 pass in maint, I'll be +1 on these. But I'm not convinced that it's worth making this change to maint to fix a compile-time-only bug if we know that it doesn't fix all the cases. -- arc.
<commit votes="steveh" id="e47d32dcd59a578274f445fac79e977d83055c8c" ticket="123712" desc="[perl #123712] Fix /$a[/ parsing"/>
This commit (d27f4)'s new test is failing in a dry-run of cherry-picking into maint -- steveh:
<commit votes="steveh" id="d27f4b916ce5819f564bdd4a135137c457156333" ticket="123712" desc="[perl #123712] Don't check sub_inwhat"/>

<commit votes="steveh, arc" id="1956db7ee60460e5b4a25c19fda4999666c8cbd1" ticket="124156" desc="RT #124156: death during unwinding causes crash"/>
<commit votes="steveh, arc" id="46b27d2f2c37f40dde845f9b4743975c69f2cc27" ticket="123398" desc="don't fatalize warnings during unwinding (#123398)"/>

</div>

<div><h3>AFL Crash / Assertion / Memory Corruption Fixes</h3>

This fix has a problem with it that needs to be solved before we can backport it.  See http://www.nntp.perl.org/group/perl.perl5.porters/;msgid=20150120104834.32035.qmail@lists-nntp.develooper.com
<commit votes="sprout, steveh, hv" id="fa8f4f85ec35b0f047603e5b90a788571f7141bd" ticket="123554" desc="[perl #123554] avoid a crash from SvGROW(MEM_SIZE_MAX)"/>
<commit votes="steveh, hv" id="cc31571878894dd5f5af83722ca0c2a24621300c" ticket="123554" desc="[perl #123554] stop checking the message"/>

Does this need d9a13252ba5aad7b3eaaff069b56472cfb651a40 too? -- steveh
<commit votes="steveh" id="67c71cbbd62a75ff2b913421806f6ea0f0b33558" ticket="" desc="Fix double free with const overload after errors"/>

<commit votes="" id="eabab8bccf871f8e85dfa4a3825827825fb86cd9" ticket="123617" desc="Localise PL_lex_stuff (crash fix)"/>
<commit votes="" id="ce7c414ee71d82955c799dca38981337cdf77b42" ticket="123955" desc="[perl #123955] Fix assert fail with 0 s/// in quotes"/>

<commit votes="" id="488bc5795891132d29daec7a860cab2a6266230c" ticket="123737" desc="[perl #123737] Fix assertion failure with 0${"/>
<commit votes="" id="310a0d0a370ea21c004bfea4bbdd2cf15da94547" ticket="123737" desc="[perl #123737] Fix assertion failure with 0$#{"/>

<commit votes="" id="3c47da3c2ebf51f08bb927dfa456939cc6c8c30f" ticket="123753" desc="[perl #123753] &amp;\0foo parsing"/>
<commit votes="" id="eea89386b3fb948a8b1eb5ea860ec0a970c9e559" ticket="123753" desc="[perl #123753] Assert fail with &amp;{+foo} and errors"/>

<commit votes="" id="7aa8cb0dec173dcfca4157e60634c74b97429a05" ticket="123677" desc="[perl #123677] Crash with token stack overflow"/>
<commit votes="" id="a53bfdae91fb2d719e69761f2d2f84c5d8a47753" ticket="123759" desc="[perl #123759] always count on OPpTRANS_IDENTICAL"/>

<commit votes="" id="8a6d8ec6fe627c401c6c759edd38bbb10e4b56e9" ticket="123755" desc="[perl #123755] including unknown char in error requires care"/>
<commit votes="" id="7082c44063b6e00b0bad96f3d8adec0946f1938c" ticket="123755" desc="regcomp can read past end of string after parsing flags"/>

<commit votes="" id="9efda33a86bb90e4838144d230a4fc3ae4d63d7d" ticket="123554" desc="[perl #123554] catch a couple of other size overflows"/>
<commit votes="" id="296f0d566b9f3ad1885ae7493caaffbd0cf2eada" ticket="123554" desc="[perl #123554] fix threaded builds and prevent a warning"/>

<commit votes="" id="87ebf1e3df9537a204b21f0405c6e60f2acdcc47" ticket="123816" desc="[perl #123816] fix stat stacking"/>
<commit votes="" id="d0bec20370cb0ec3e757fde65d8f1d13693e913f" ticket="123870" desc="[perl #123870] fixup trie runtime debug output"/>
<commit votes="" id="fc1bb3f2dcaaac9f305b27acb4800babdc8a06f3" ticket="123874" desc="[perl #123874] fix argument underflow for pack()"/>

<commit votes="" id="f4460c6f7a0de152ddaed69a0ba0efe653258f81" ticket="123801" desc="[perl #123801] Stop s##[}#e from crashing"/>
<commit votes="" id="479ae48e22f1160cf86508685822bf7e53e5816b" ticket="123802" desc="[perl #123802] Assertion failure with /$0{}/"/>
<commit votes="" id="66edcf79f81d47833f2be442966a5e90a223365f" ticket="123802" desc="[perl #123802] Assertion failure with qq[\L\L]"/>

<commit votes="" id="55b3980349c58171a77894903fd928262fb081f2" ticket="123763" desc="[perl #123763] Clear target on my $_; split"/>

<commit votes="" id="6b2b48acae2d74dcbde18f956f6951b5b9aa468b" ticket="123817" desc="[perl #123817] Assert fail with attr in anon hash"/>
<commit votes="" id="813d2eb17164751c312a69e7c7c56dc71aad1ff1" ticket="123849" desc="[perl #123849] sv.c: Fix sv_clear -Do output"/>
<commit votes="" id="923ed5809c063091fb0f77dc6f1b8231d587d13e" ticket="123960" desc="[perl #123960] sv.c: Fix gp_free -Do output"/>
<commit votes="" id="9d58dbc453a86c9cbb3a131adcd1559fe0445a08" ticket="123963" desc="[perl #123963] qq[@&lt;fullwidth digit&gt;]"/>
<commit votes="" id="3d50185de85a756293c9c3954114bd5c2d08a460" ticket="123847" desc="[perl #123847] crash with *foo::=*bar::=*with_hash"/>
<commit votes="" id="b24768f02e4adcd11668f94274f5617c4a3f5379" ticket="123995" desc="[perl #123995] Assert fail with s;@{&lt;&lt;;"/>
<commit votes="" id="aab1202a8d4b691b16384fb41d2e2a06abf664e2" ticket="123790" desc="[perl #123790] Assert fail with *x=&lt;y&gt;"/>
<commit votes="" id="d655d9a2c4d4884d0edf5364a3aafbc8b0b8de38" ticket="124099" desc="[perl #124099] Wrong CvOUTSIDE in find_lexical_cv"/>
<commit votes="" id="b12396ac84cef7e23e1aac516fa676165ddfc790" ticket="124187" desc="[perl #124187] don't call pad_findlex() on a NULL CV"/>
<commit votes="" id="de0885da327045eed274d7f8913a58e6de0e0f30" ticket="124385" desc="null ptr deref in Perl_cv_forget_slab"/>

</div>

<div><h3>Regression Fixes</h3>

<commit votes="tonyc, arc" id="bae8cfc6926f9b04d8adac6a9ee6d563cc18263f" ticket="125121" desc="Don't treat setpgrp($nonzero) as setpgrp(1)"/>
<commit votes="steveh, arc, davem" id="0fa70a06a98fc8fa9840d4dbaa31fc2d3b28b99b" ticket="123743" desc="simpify and speed up /.*.../ handling"/>

</div>

<div><h3>Build and Installation Fixes</h3>

On the mailing list (http://www.nntp.perl.org/group/perl.perl5.porters/2015/05/msg227963.html et seqq) Tony says that f33b2f5 is incorrect, because it edits a generated file rather than that file's source. However, blead doesn't seem to have been changed to delete mkstemp() from win32 builds, as seemed to be the consensus. I'm therefore assuming that the degree of wrongness isn't sufficient to block this fix from a maint release (and it does clearly provide a platform-specific build fix). -- arc.
<commit votes="steveh, arc" id="f33b2f585292653a3c50ea39cbdab734c3473fcb" ticket="" desc="handle existing mkstemp() in mingw-w64-v4"/>
<commit votes="steveh, arc" id="6378109479f5b474e8205c8478f484b209078772" ticket="" desc="add new address for kmx"/>

</div>

<div><h3>Portability Fixes</h3>

</div>

<div><h3>Platform-Specific Test Fixes</h3>

</div>

<div><h3>Documentation Fixes</h3>

<commit votes="steveh" id="965d3000a316a5ed367c2ce65d040e1125d5e31d" ticket="" desc="Update supported versions in perlpolicy.pod"/>

</div>

</data>

<xsl:stylesheet version="1.0" id="stylesheet" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"><xsl:template match="xsl:stylesheet"/>
  <xsl:template match="/">
    <html>
      <head>
        <title>Cherry-pick votes for maint-5.20</title>
        <style>
          .accepted .ref a { color: #090 }
          .unvoted  .ref a { color: #c00 }
        </style>
      </head>
      <body>
        <h1>Cherry-pick votes for maint-5.20</h1>
        <xsl:for-each select="/doc/data/div">
          <h2><xsl:value-of select="h2"/></h2>
          <h3><xsl:value-of select="h3"/></h3>
          <table>
            <xsl:for-each select="commit|head">
              <xsl:choose>
                <xsl:when test="local-name() = 'commit'">
                  <tr>
                    <xsl:apply-templates select="@votes"/>
                    <td style="vertical-align: top; white-space: nowrap">
                      <xsl:value-of select="@votes"/>
                    </td>
                    <td class="ref" style="vertical-align: top">
                      <a href="http://perl5.git.perl.org/perl.git/commitdiff/{@id}">
                        <xsl:value-of select="@id"/>
                      </a>
                    </td>
                    <td style="vertical-align: top">
                      <a href="https://rt.perl.org/Ticket/Display.html?id={@ticket}">
                        <xsl:value-of select="@ticket"/>
                      </a>
                    </td>
                    <td style="vertical-align: top">
                      <xsl:value-of select="@desc"/>
                    </td>
                  </tr>
                </xsl:when>
                <xsl:when test="local-name() = 'head'">
                  <tr>
                    <xsl:apply-templates select="@votes"/>
                    <td style="vertical-align: top; white-space: nowrap">
                      <xsl:value-of select="@votes"/>
                    </td>
                    <td class="ref" style="vertical-align: top">
                      <a href="http://perl5.git.perl.org/perl.git/shortlog/refs/heads/{@branch}">
                        <xsl:value-of select="@branch"/>
                      </a>
                    </td>
                    <td style="vertical-align: top">
                      <a href="https://rt.perl.org/Ticket/Display.html?id={@ticket}">
                        <xsl:value-of select="@ticket"/>
                      </a>
                    </td>
                    <td style="vertical-align: top">
                      <xsl:value-of select="@desc"/>
                    </td>
                  </tr>
                </xsl:when>
              </xsl:choose>
            </xsl:for-each>
          </table>
        </xsl:for-each>
      </body>
    </html>
  </xsl:template>
  <xsl:template match="@votes">
    <xsl:choose>
      <xsl:when test=". = ''">
        <xsl:attribute name="class">unvoted</xsl:attribute>
      </xsl:when>
      <xsl:when test="substring-after(substring-after(normalize-space(translate(., ',', ' ')), ' '), ' ') != ''">
        <xsl:attribute name="class">accepted</xsl:attribute>
      </xsl:when>
    </xsl:choose>
  </xsl:template>
</xsl:stylesheet>

</doc>
