=encoding utf8

=head1 NAME

perldelta - what is new for perl v5.26.1

=head1 DESCRIPTION

This document describes differences between the 5.26.0 release and the 5.26.1
release.

If you are upgrading from an earlier release such as 5.25.0, first read
L<perl5260delta>, which describes differences between 5.25.0 and 5.26.0.

=head1 Security

XXX Any security-related notices go here.  In particular, any security
vulnerabilities closed should be noted here rather than in the
L</Selected Bug Fixes> section.

[ List each security issue as a =head2 entry ]

=head1 Incompatible Changes

There are no changes intentionally incompatible with 5.26.0.  If any exist,
they are bugs, and we request that you submit a report.  See L</Reporting
Bugs> below.

=head1 Modules and Pragmata

=head2 Updated Modules and Pragmata

=over 4

=item *

L<base> has been upgraded from version 2.25 to 2.26.

The effects of dotless C<@INC> on this module have been limited by the
introduction of a more refined and accurate solution for removing
C<'.'> from C<@INC> while reducing the false positives.

=item *

L<charnames> has been upgraded from version 1.44 to 1.45.

=item *

L<Module::CoreList> has been upgraded from version 5.20170530 to 5.20170922_26.

=back

=head1 Platform Support

=head2 Platform-Specific Notes

=over 4

=item FreeBSD

=over 4

=item *

Building with C<g++> on FreeBSD-11.0 has been fixed. [perl #131337]

=back

=item Windows

=over 4

=item *

Support for compiling perl on Windows using Microsoft Visual Studio 2017
(containing Visual C++ 14.1) has been added.

=item *

Building XS modules with C<gcc> 6 in a 64-bit build of Perl failed due to
incorrect mapping of C<strtoll> and C<strtoull>. This has now been fixed.
[perl #131726] [cpan #121683] [cpan #122353]

=back

=back

=head1 Selected Bug Fixes

=over 4

=item *

Several built-in functions previously had bugs that could cause them to
write to the internal stack without allocating room for the item being
written. In rare situations, this could have led to a crash. These bugs have
now been fixed, and if any similar bugs are introduced in future, they will
be detected automatically in debugging builds. [perl #131732]

=item *

Using a symbolic ref with postderef syntax as the key in a hash lookup was
yielding an assertion failure on debugging builds. [perl #131627]

=item *

List assignment (C<aassign>) could in some rare cases allocate an
entry on the mortal stack and leave the entry uninitialized. [perl
#131570]

=item *

Attempting to apply an attribute to an C<our> variable where a
function of that name already exists could result in a NULL pointer
being supplied where an SV was expected, crashing perl.  [perl
#131597]

=item *

The code that vivifies a typeglob out of a code ref made some false assumptions
that could lead to a crash in cases such as C<< $::{"A"} = sub {}; \&{"A"} >>.
This has now been fixed. [perl #131085]

=item *

C<my_atof2> no longer reads beyond the terminating NUL, which previously
occurred if the decimal point is immediately before the NUL. [perl #131526]

=item *

Occasional "Malformed UTF-8 character" crashes in C<s//> on utf8 strings have
been fixed. [perl #131575]

=item *

C<perldoc -f s> now finds C<s///>. [perl #131371]

=item *

Some erroneous warnings after utf8 conversion have been fixed. [perl #131190]

=item *

The C<jmpenv> frame to catch Perl exceptions is set up lazily, and this used
to be a bit too lazy. The catcher is now set up earlier, preventing some
possible crashes. [perl #105930]

=item *

Spurious "Assuming NOT a POSIX class" warnings have been removed. [perl #131522]

=back

=head1 Acknowledgements

XXX Generate this with:

  perl Porting/acknowledgements.pl v5.26.1..HEAD

=head1 Reporting Bugs

If you find what you think is a bug, you might check the perl bug database
at L<https://rt.perl.org/> .  There may also be information at
L<http://www.perl.org/> , the Perl Home Page.

If you believe you have an unreported bug, please run the L<perlbug> program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of C<perl -V>,
will be sent off to perlbug@perl.org to be analysed by the Perl porting team.

If the bug you are reporting has security implications which make it
inappropriate to send to a publicly archived mailing list, then see
L<perlsec/SECURITY VULNERABILITY CONTACT INFORMATION>
for details of how to report the issue.

=head1 Give Thanks

If you wish to thank the Perl 5 Porters for the work we had done in Perl 5,
you can do so by running the C<perlthanks> program:

    perlthanks

This will send an email to the Perl 5 Porters list with your show of thanks.

=head1 SEE ALSO

The F<Changes> file for an explanation of how to view exhaustive details on
what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut
