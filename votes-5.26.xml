<?xml version="1.0"?><?xml-stylesheet type="text/xml" href="#stylesheet"?><!DOCTYPE doc SYSTEM "doc.dtd"><doc>

<data>

<div><h2>Tickets Listed in #132182: 5.26.2 blockers</h2>

</div>

<div><h2>Other Proposed Cherry-Picks</h2>

Blead changes have been examined up to and including 823ba440369100de3f2693420a3887a645a57d28 (fix line numbers in multi-line s///)

Proposed cherry-picks are grouped according to the types of change permitted by perlpolicy.pod.

(NOTE: The same document states that the following types of change are not acceptable:

Anything controversial
Breaking binary compatibility
Adding or removing features
Adding new warnings, errors or deprecations

The same criteria apply to code in dual-life modules as to core code.)

</div>

<div><h3>Security Fixes</h3>

</div>

<div><h3>Crash / Assertion / Memory Corruption Fixes</h3>

Note sure about this one, since it may convert non-conforming programs that work into non-conforming programs that assert (on debug builds), and should include 97fcda75b598695644a4ad496e090941f5b7dcbc if it is applied.
These three together (if at all)
<commit votes="steveh sprout" id="f14cf3632059d421de83cf901c7e849adc1fcd03" ticket="131746" desc="(perl #131746) avoid undefined behaviour in Copy() etc"/>
<commit votes="steveh sprout" id="45908e4d120d33a558a8b052036c56cd0c90b898" ticket="131746" desc="avoid  'the address of ... will always evaluate as ...' warns in mem macros"/>
<commit votes="tonyc" id="97fcda75b598695644a4ad496e090941f5b7dcbc" ticket="131746" desc="threads.xs: don't Copy() null pointer"/>

Move to public list?:
<commit votes="steveh tonyc" id="4dc12118f61b997fbd030230665b46e7c40f32d6" ticket="132017" desc="fix #132017 - OPFAIL insert needs to set flags to 0"/>

<commit votes="steveh tonyc" id="6c4f4eb174d1e2e9f874786123a699d11ae741f9" ticket="131893" desc="prevent integer overflow when compiling a regexp"/>

If the parser structure layout is part of the ABI, this shouldn't be backported, or the new parser structure members need to be moved to the end.
<commit votes="steveh sprout tonyc" id="bb4e4c3869d9fb6ee5bddd820c2a373601ecc310" ticket="125351" desc="(perl #125351) abort parsing if parse errors happen in a sub lex"/>

This ought to have 02c84d7f0f97e083f5d8ea9856488f3ede09364f as well, though that makes this sound slightly controversial (so maybe it should be rejected for maint?):
<commit votes="steveh" id="4764858cb80e76fdba33cc1b3be8fcdef26df754" ticket="52610" desc="Fix RT #52610: Carp: Do not crash when reading @DB::args"/>
I don’t think 02c84d7f0f97e is necessary.  It is just a large comment.
Also, don’t backport the version change; just add _01 to the maint version.
-- sprout

</div>

<div><h3>Regression Fixes</h3>

</div>

<div><h3>New Feature Fixes</h3>

</div>

<div><h3>Build and Installation Fixes</h3>

<commit votes="steveh tonyc" id="fa2e45943e2b6ce22cf70dba5b47afe73c8c7c80" ticket="131786" desc="(perl #131786) avoid a duplicate symbol error on _LIB_VERSION"/>
<commit votes="steveh tonyc" id="488307ffa67ce70fc9755e560a74dac04bdcb0e4" ticket="" desc="Revert &quot;Revert &quot;Fallbacks for Perl_fp_class_denorm().&quot;&quot;"/>
<commit votes="steveh tonyc" id="72bbce3da5eeffde81ed89bb421e17a9f4caf8ce" ticket="" desc="miniperl also needs -Ilib for perl.exp on AIX etc"/>
<commit votes="steveh tonyc" id="43b354f1e14ddf43aa09cd475560e87eb8b1e2e9" ticket="132421" desc="Improve cl version detection"/>
<commit votes="steveh tonyc" id="6f669bf58bbfaf8d7ef367574be9252df84c08d1" ticket="132484" desc="Fix $Config{libpth} for x64 builds with VC++ earlier than 14.1 (VS2017)"/>

</div>

<div><h3>Portability Fixes</h3>

<commit votes="steveh tonyc" id="1444f7108081b769dde07c1c68c06ee4e7bb93c0" ticket="" desc="g++ is like gcc on AIX too"/>

</div>

<div><h3>Platform-Specific Test Fixes</h3>

<commit votes="steveh tonyc" id="0e45f4872e73c83376fcd3a255ffcfc823aec531" ticket="" desc="Fix test failures in GCC &quot;long doubles&quot; builds on Windows"/>

</div>

<div><h3>Documentation Fixes</h3>

</div>

</data>

<xsl:stylesheet version="1.0" id="stylesheet" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"><xsl:template match="xsl:stylesheet"/>
  <xsl:template match="/">
    <html>
      <head>
        <title>Cherry-pick votes for maint-5.26</title>
        <style>
          .accepted .ref a { color: #090 }
          .unvoted  .ref a { color: #c00 }
        </style>
      </head>
      <body>
        <h1>Cherry-pick votes for maint-5.26</h1>
        <xsl:for-each select="/doc/data/div">
          <h2><xsl:value-of select="h2"/></h2>
          <h3><xsl:value-of select="h3"/></h3>
          <table>
            <xsl:for-each select="commit|head">
              <xsl:choose>
                <xsl:when test="local-name() = 'commit'">
                  <tr>
                    <xsl:apply-templates select="@votes"/>
                    <td style="vertical-align: top; white-space: nowrap">
                      <xsl:value-of select="@votes"/>
                    </td>
                    <td class="ref" style="vertical-align: top">
                      <a href="http://perl5.git.perl.org/perl.git/commitdiff/{@id}">
                        <xsl:value-of select="@id"/>
                      </a>
                    </td>
                    <td style="vertical-align: top">
                      <a href="https://rt.perl.org/Ticket/Display.html?id={@ticket}">
                        <xsl:value-of select="@ticket"/>
                      </a>
                    </td>
                    <td style="vertical-align: top">
                      <xsl:value-of select="@desc"/>
                    </td>
                  </tr>
                </xsl:when>
                <xsl:when test="local-name() = 'head'">
                  <tr>
                    <xsl:apply-templates select="@votes"/>
                    <td style="vertical-align: top; white-space: nowrap">
                      <xsl:value-of select="@votes"/>
                    </td>
                    <td class="ref" style="vertical-align: top">
                      <a href="http://perl5.git.perl.org/perl.git/shortlog/refs/heads/{@branch}">
                        <xsl:value-of select="@branch"/>
                      </a>
                    </td>
                    <td style="vertical-align: top">
                      <a href="https://rt.perl.org/Ticket/Display.html?id={@ticket}">
                        <xsl:value-of select="@ticket"/>
                      </a>
                    </td>
                    <td style="vertical-align: top">
                      <xsl:value-of select="@desc"/>
                    </td>
                  </tr>
                </xsl:when>
              </xsl:choose>
            </xsl:for-each>
          </table>
        </xsl:for-each>
      </body>
    </html>
  </xsl:template>
  <xsl:template match="@votes">
    <xsl:choose>
      <xsl:when test=". = ''">
        <xsl:attribute name="class">unvoted</xsl:attribute>
      </xsl:when>
      <xsl:when test="substring-after(substring-after(normalize-space(translate(., ',', ' ')), ' '), ' ') != ''">
        <xsl:attribute name="class">accepted</xsl:attribute>
      </xsl:when>
    </xsl:choose>
  </xsl:template>
</xsl:stylesheet>

</doc>
